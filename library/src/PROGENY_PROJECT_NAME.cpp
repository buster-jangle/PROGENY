/*
  ___   _   _   ___   _   _ _____ ___   _   __
 / _ \ | \ | | / _ \ | \ | |_   _/ _ \ | | / /
/ /_\ \|  \| |/ /_\ \|  \| | | |/ /_\ \| |/ / 
|  _  || . ` ||  _  || . ` | | ||  _  ||    \ 
| | | || |\  || | | || |\  | | || | | || |\  \
\_| |_/\_| \_/\_| |_/\_| \_/ \_/\_| |_/\_| \_/
                                                                       
Project PROGENY_PROJECT_NAME PROGENY_PROJECT_NAME.cpp
Initial file automatically generated by PROGENY on PROGENY_CURRENT_DATE

 Template library source
*/

#include "PROGENY_PROJECT_NAME.h" // include header

// include common headers by default
#include "stdio.h"
#include "stdlib.h"
#include <errno.h> // Error integer and strerror() function
#include <unistd.h> // write(), read(), close()
#include <fcntl.h> // Contains file controls like O_RDWR
#include <string>
#include <limits.h>
#include <chrono>
#include "stdbool.h"
#include <iostream>
#include <thread>
#include <mutex>

using namespace std; // default namespace

PROGENY_PROJECT_NAME::PROGENY_PROJECT_NAME(){
    status = 0;
}

bool PROGENY_PROJECT_NAME::connectToServer(string address){
    return true;
}

int PROGENY_PROJECT_NAME::multiply(int a, int b){
    return a * b;
}

float PROGENY_PROJECT_NAME::multiply(float a, float b){
    return a * b;
}


