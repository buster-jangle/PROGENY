/*
  ___   _   _   ___   _   _ _____ ___   _   __
 / _ \ | \ | | / _ \ | \ | |_   _/ _ \ | | / /
/ /_\ \|  \| |/ /_\ \|  \| | | |/ /_\ \| |/ / 
|  _  || . ` ||  _  || . ` | | ||  _  ||    \ 
| | | || |\  || | | || |\  | | || | | || |\  \
\_| |_/\_| \_/\_| |_/\_| \_/ \_/\_| |_/\_| \_/
                                                                       
Project PROGENY_PROJECT_NAME main.cpp
Initial file automatically generated by PROGENY on PROGENY_CURRENT_DATE
*/

#include "main.h" // include main header
#include "PROGENY_PROJECT_NAME.h" // include the default library

// include common headers by default
#include "stdio.h"
#include "stdlib.h"
#include <errno.h> // Error integer and strerror() function
#include <unistd.h> // write(), read(), close()
#include <fcntl.h> // Contains file controls like O_RDWR
#include <string>
#include <limits.h>
#include <chrono>
#include "stdbool.h"
#include <iostream>
#include <thread>
#include <mutex>
#include "plog/Log.h"
#include "CLI/App.hpp"
#include "CLI/Formatter.hpp"
#include "CLI/Config.hpp"

using namespace std; // default namespace

int main(int argc, char *argv[]){
    CLI::App cli{"-PROGENY_PROJECT_NAME application description-"};

    std::string logfilePath = "PROGENY_PROJECT_NAME.log";
    cli.add_option("-l,--logfile", logfilePath, "Logfile destination. ex: logs/PROGENY_PROJECT_NAME.log");
    CLI11_PARSE(cli);

	cout << "Hello world" << endl;


	while(true){



	}
}





